service:
- docker

language: java
jdk:
- oraclejdk8
#- oraclejdk10
node_js: lts/*

addons:
  apt:
    update: true
    packages:
    - sudo
    - lsof
    - wget
    - bash
    - curl
    - jq
    - libxml2-utils
    - unzip
    - docker-ce
    - python-pip
    - libappindicator1
    - fonts-liberation
    - google-chrome-stable

install: true
before_install:
- export CHROME_BIN=/usr/bin/google-chrome
- export DISPLAY=:99.0
- sh -e /etc/init.d/xvfb start
#
- sudo pip install docker-compose httpie >/dev/null 2>&1
- source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
- stop_any 5432 5672 27017 8082 8082 8081 8081 8080 8080 80 80

script:
# jgiven tests and docs
#- bash gradlew -S -Pdebug clean test jgiven build documentation >/dev/null || true
- bash gradlew -S -Pdebug clean check build >/dev/null

- export APP_UPLOAD_PATH="/tmp/file-storage"
- mkdir -p ${APP_UPLOAD_PATH}
- cp -Rf ./modules/apps/file-server/build/libs "${APP_UPLOAD_PATH}/"

# postgres
- bash gradlew clean assemble postgresUp >/dev/null
- bash ./modules/apps/file-items-service/build/libs/*.jar --spring.profiles.active=db-pg >/dev/null &
- wait_for 8001
- bash ./modules/apps/file-server/build/libs/*.jar >/dev/null &
- wait_for 8002
- http --auth user:password :8001/actuator/health
- http --auth user:password -f post :8002/upload filename="$(date)-build.gradle" file@build.gradle
- http --auth user:password -f post :8002/upload filename="$(date)-settings.gradle" file@settings.gradle
- http --auth user:password :8002/api/v1/files
- http --auth user:password :8002/
- stop_any 8002 8002 8001 8001 80 80
- bash gradlew postgresDown >/dev/null

# h2
- bash gradlew clean assemble >/dev/null
#- bash ./modules/apps/file-items-service/build/libs/*jar --spring.profiles.active=db-h2 >/dev/null &
- bash ./modules/apps/file-items-service/build/libs/*jar >/dev/null &
- wait_for 8001
- bash ./modules/apps/file-server/build/libs/*jar --app.upload.path=${APP_UPLOAD_PATH} >/dev/null &
- wait_for 8002
- http --auth user:password :8001/actuator/health
- http --auth user:password -f post :8002/upload filename="$(date)-build.gradle" file@build.gradle
- http --auth user:password -f post :8002/upload filename="$(date)-settings.gradle" file@settings.gradle
- http --auth user:password :8002/api/v1/files
- http --auth user:password :8002/
- stop_any 8002 8002 8001 8001 80 80

# install as linux service
- bash gradlew clean assemble postgresUp >/dev/null
- cp -Rf ./modules/apps/file-server/build/libs "${APP_UPLOAD_PATH}/"
- mv -f ./modules/apps/file-items-service/build/libs/*.jar /tmp/file-items-service.jar
- #export SPRING_PROFILES_ACTIVE=db-pg
- echo 'JAVA_OPTS="-Dspring.profiles.active=pg-db"' > /tmp/file-items-service.conf
- mv -f ./modules/apps/file-server/build/libs/*.jar        /tmp/file-server.jar
- sudo ln -s /tmp/file-items-service.jar                          /etc/init.d/file-items-service
- sudo ln -s /tmp/file-server.jar                                 /etc/init.d/file-server
- sudo service file-items-service                                 start
- wait_for 8001
- sudo service file-server                                        start
- wait_for 8002
- http --auth user:password :8001/actuator/health
- http --auth user:password :8002/actuator/health
- http --auth user:password -f post :8002/upload filename="$(date)-README.md" file@README.md
- http --auth user:password :8002/api/v1/files
- http --auth user:password :8002/
- sudo service file-server                                        stop
- sudo service file-items-service                                 stop
- bash gradlew postgresDown >/dev/null 2>&1
- unset SPRING_PROFILES_ACTIVE

# scripts/application.bash
- bash ./scripts/application.bash start build
- bash ./scripts/application.bash stop build
- bash ./scripts/application.bash start build
- http --auth user:password -f post :8002/upload filename="$(date)-build.gradle" file@build.gradle
- http --auth user:password -f post :8002/upload filename="$(date)-settings.gradle" file@settings.gradle
- http --auth user:password -f post :8002/upload filename="$(date)-README.md" file@README.md
- http --auth user:password :8001/api/v1/file-items
- http --auth user:password :8002/api/v1/files
- yes | bash ./scripts/application.bash clean build

# scripts/application-h2.bash
- bash ./scripts/application-h2.bash start build
- bash ./scripts/application-h2.bash stop build
- bash ./scripts/application-h2.bash start build
- http --auth user:password :8001/actuator/health
- http --auth user:password -f post :8002/upload filename="$(date)-build.gradle" file@build.gradle
- http --auth user:password -f post :8002/upload filename="$(date)-settings.gradle" file@settings.gradle
- http --auth user:password :8002/api/v1/files
- http --auth user:password :8002/
- yes | bash ./scripts/application-h2.bash clean build

env:
  global:
  - TERM=dumb
  - secure: Eh+HT5YScrFz1JoZLHtbxPqFT6E/7+qHFDoN2fqYXX2lpahCJmTX6dW/8lyk32sMUvTpljJPpKQb/Xavxk8lHE0tDcdr/1l5N4WHnZPGJqKLB36VQpuFkMwmsbQH7dfJskDpFjJZSKa0oXTa8AEU8U2nstdFdyKZt2wChWOMMNCmEiL7YVu0bqjn08Qlfkye3pg9q6tMRGMLIL3Y0pvqWrhb2zfbjojcq+pQLrZGmuh0XUqshPQqc9M959KDSq3aq1INjSFYI3siIHN8b/He1qBSECWURvsgA9uKBNo2LuvLfvzFzHmzpHBNRbRcjrCzF8gzxuVxkfxjW5zOtJbe/7KOxM5NHKtWfCeTunrzJoEl9v9h/AYRlS0UBBFyie3XWraxed9aFuT7QbR0mTmx7s33vNGRMkujG+nPhkPzuM0ABpU/t5quvvo9zMmnd1LOe3XV+kAo3HOqkAD/FC5JZI5aaMJXrSS+O9XzPXS+E2CjGPAgBY0VIX0LwVVc80t00xkppfINtj/0HYyKE3xXE6cnM34204u+9Mksxb/TZQY+GMpAOCIUn+RrO0vxM7hvv8anm59rMOAZ/FgvLs+i3d1CuJJDCn9fuFxa0Etnn/krusLdwzjvI+9AgMknVCo1mnxbNuIAo2BnkOdzz35PxX8iDxc7fThYt9u5mx8M79E=
  - secure: D04FeSPymLevdF11Ej1dUAxxHV9rKHHj/0sld/KPNh/mr876dm1l9AMo6VcBC5Kr1a6AwDJiOG9d8XgUEFRNvhBb3nMjIJa/99psykPL1N4WWZojULkeUtfhbVC+4d5qoLjNM2svT8IFJ9hO1kfgBGKk1Cd5KA+PtjceEIAJ29gaBvnbYo3MspXZsd3RA87kgY/poxQX2j7JeyKqQQKTLN8FTLqu7vgmdZWRYrUrSXiZvoJc9yJ+7PW6u4N4nVlReYb6+GGOM6BAtyB0dDxxG50sL8VcrYnzRlWyEXMaqNlqu2FBI+sBEuzkVkGulZMIsHDfKQhMPH/g2bN79FiPJVEiS7aOBiSMjS2f7vAq9JS3xOnNmMPjHOkAfzpktXbYHydeQIW6vcUue58qUkaj+zn7kyocg83hDlR/j3ATfXJvOGF4vqhkRwPtz7WeZ+Lra7nMrlhaLkFpALco7+ZOB9BwDa3lV1oic6Xv4pRNHgdIx+KcBOI6n4BND22ckzwa0p2+kfDHakIyojX2nNiWg7jzl1oDokI/3nnx/L2piUjKHspjvq7wiJjZefbYRgfLqML+TJ/osZ4P4rin8RLb6my/J3ApMlDH9PyiLNkafnhYKGsTP43XCYMBwVGxv++f/+6JeXsS35Hs4YXbCc1ANt7sTck6FzKgrELgTTOViGk=

before_deploy:
- mkdir -p ${HOME}/.m2
- echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"                      ' >  ${HOME}/.m2/settings.xml
- echo '          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"               ' >> ${HOME}/.m2/settings.xml
- echo '          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0          ' >> ${HOME}/.m2/settings.xml
- echo '                              http://maven.apache.org/xsd/settings-1.0.0.xsd">' >> ${HOME}/.m2/settings.xml
- echo '  <servers>                                                                   ' >> ${HOME}/.m2/settings.xml
- echo '    <server>                                                                  ' >> ${HOME}/.m2/settings.xml
- echo '      <id>github</id>                                                         ' >> ${HOME}/.m2/settings.xml
- echo '      <username>daggerok</username>                                           ' >> ${HOME}/.m2/settings.xml
- echo "      <password>${GITHUB_PASSWORD}</password>                                 " >> ${HOME}/.m2/settings.xml
- echo '    </server>                                                                 ' >> ${HOME}/.m2/settings.xml
- echo '  </servers>                                                                  ' >> ${HOME}/.m2/settings.xml
- echo '</settings>                                                                   ' >> ${HOME}/.m2/settings.xml
- ./mvnw
#
- ./mvnw -Pdocs >/dev/null
- mkdir -p target/generated-docs
- cp -Rf target/generated-docs/index.html target/generated-docs/404.html

deploy:
  provider: pages
  skip-cleanup: true
  github-token: "$GITHUB_TOKEN"
  keep-history: true
  on:
    branch: master
  local-dir: target/generated-docs
  target_branch: gh-pages
