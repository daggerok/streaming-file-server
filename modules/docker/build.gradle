subprojects { sp ->
  apply plugin: 'docker-compose'

  // fucking windows paths... replace all: '\\' -> '/'
  def root = rootDir.absolutePath.replaceAll('\\\\', '/')

  // gradle -Pdebug
  def isDebugEnabled = sp.hasProperty('debug')

  dockerCompose {
    useComposeFiles = ["$root/modules/docker/${sp.name}/docker-compose.yml"]
    //executable = '/path/to/docker-compose'
    //dockerExecutable = '/path/to/docker'
    //captureContainersOutput = true
    //captureContainersOutput = false
    captureContainersOutput = isDebugEnabled
    //captureContainersOutputToFile = '/path/to/logFile'
    stopContainers = true
    removeContainers = true
    removeImages = 'Local'
    removeVolumes = true
    removeOrphans = true
    forceRecreate = true
    waitForTcpPorts = false
    projectName = sp.parent.name
  }

  tasks.create("${sp.name}Up") {
    if (it.name.contains('app')) dependsOn ':assemble'
    dependsOn composeUp
  }

  tasks.create("${sp.name}Down") {
    finalizedBy composeDown
  }
}
