<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.daggerok</groupId>
  <artifactId>streaming-file-server</artifactId>
  <packaging>pom</packaging>
  <version>4.3.36</version>

  <developers>
    <developer>
      <name>Maksim Kostromin</name>
      <email>daggerok@gmail.com</email>
      <organization>Sets of open source Maksim Kostromin aka daggerok projects</organization>
      <organizationUrl>https://github.com/daggerok/</organizationUrl>
    </developer>
  </developers>

  <organization>
    <name>Maksim Kostromin aka daggerok open source projects sets</name>
    <url>https://github.com/daggerok/</url>
  </organization>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://github.com/daggerok/streaming-file-server/blob/master/LICENSE</url>
    </license>
  </licenses>

  <scm>
    <developerConnection>scm:git:git@github.com:daggerok/streaming-file-server.git</developerConnection>
    <connection>scm:git:https://github.com/daggerok/streaming-file-server.git</connection>
    <url>https://github.com/daggerok/streaming-file-server.git</url>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <encoding>UTF-8</encoding>
    <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>

    <maven.version>3.6.3</maven.version>
    <maven.wrapper.version>0.5.6</maven.wrapper.version>
    <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
    <versions-maven-plugin.version>2.7</versions-maven-plugin.version>
    <github-release-plugin.version>1.4.0</github-release-plugin.version>
    <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
    <asciidoctor-maven-plugin.version>2.0.0-RC.1</asciidoctor-maven-plugin.version>

    <!-- 1.3.0-alpha4 is incompatible -->
    <logback.version>1.2.3</logback.version>

    <asciidoctor.version>3.1.0</asciidoctor.version>
    <asciidoctorj.pdf.version>1.5.2</asciidoctorj.pdf.version>
    <asciidoctorj.convert.version>2.4.0</asciidoctorj.convert.version>
    <asciidoctorj.diagram.version>2.0.1</asciidoctorj.diagram.version>

    <vavr.version>0.10.2</vavr.version>
    <gradle.version>6.2.2</gradle.version>
    <jquery.version>3.4.1</jquery.version>
    <popper.version>1.16.1</popper.version>
    <jgiven.version>0.18.2</jgiven.version><!-- jgiven.version 1.0.0-RC2 currently is incompatibleQ -->
    <lombok.version>1.18.12</lombok.version>
    <spotbugs.version>2.0.0</spotbugs.version>
    <selenide.version>5.8.0</selenide.version>
    <postgres.version>42.2.10</postgres.version>
    <bootstrap.version>4.4.1</bootstrap.version>
    <commons.io.version>1.3.2</commons.io.version>
    <jacoco.tool.version>0.8.4</jacoco.tool.version>
    <powermockito.version>2.0.5</powermockito.version>
    <font.awesome.version>5.12.0</font.awesome.version>
    <spotbugs.tool.version>4.0.0</spotbugs.tool.version>
    <lombok.plugin.version>3.3.0</lombok.plugin.version>
    <versions.gradle.plugin>0.28.0</versions.gradle.plugin>
    <spring.boot.version>2.2.5.RELEASE</spring.boot.version>
    <hibernate.java8.version>5.4.12.Final</hibernate.java8.version>
    <bootstrap.file.input.version>5.0.7</bootstrap.file.input.version>
    <docker.compose.gradle.plugin>0.10.9</docker.compose.gradle.plugin>
    <io.spring.dependency-management>1.0.9.RELEASE</io.spring.dependency-management>
  </properties>

  <build>
    <defaultGoal>exec:exec de.jutzig:github-release-plugin:${github-release-plugin.version}:release</defaultGoal>
    <!--
      ./mvnw versions:display-dependency-updates versions:display-property-updates versions:display-plugin-updates
    -->
    <plugins>
      <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>versions-maven-plugin</artifactId>
      <version>${versions-maven-plugin.version}</version>
        <configuration>
          <allowSnapshots>true</allowSnapshots>
          <excludeReactor>false</excludeReactor>
          <generateBackupPoms>false</generateBackupPoms>
          <allowIncrementalUpdates>true</allowIncrementalUpdates>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>compile-gradle</id>
            <phase>initialize</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>${gradle.executable}</executable>
          <arguments>
            <argument>clean</argument>
            <argument>build</argument>
          </arguments>
        </configuration>
      </plugin>
      <plugin>
        <groupId>de.jutzig</groupId>
        <artifactId>github-release-plugin</artifactId>
        <version>${github-release-plugin.version}</version>
        <executions>
          <execution>
            <id>release</id>
            <phase>deploy</phase>
          </execution>
        </executions>
        <configuration>
          <overwriteArtifact>true</overwriteArtifact>
          <description>${project.artifactId} release</description>
          <releaseName>v${project.version}</releaseName>
          <tag>${project.version}</tag>
          <fileSets>
            <fileSet>
              <directory>${project.basedir}</directory>
              <includes>
                <include>*.md</include>
              </includes>
            </fileSet>
            <fileSet>
              <directory>${project.basedir}/scripts</directory>
              <includes>
                <include>application*.bash</include>
                <include>application*.cmd</include>
              </includes>
            </fileSet>
            <fileSet>
              <directory>${project.basedir}/modules/docker/postgres</directory>
              <includes>
                <include>docker-compose.yml</include>
              </includes>
            </fileSet>
            <fileSet>
              <directory>${project.basedir}/modules/apps/file-items-service/build/libs</directory>
              <includes>
                <include>*.jar</include>
              </includes>
            </fileSet>
            <fileSet>
              <directory>${project.basedir}/modules/apps/file-server/build/libs</directory>
              <includes>
                <include>*.jar</include>
              </includes>
            </fileSet>
          </fileSets>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>Windows</id>
      <activation>
        <os>
          <family>Windows</family>
        </os>
      </activation>
      <properties>
        <gradle.executable>gradlew.bat</gradle.executable>
      </properties>
    </profile>

    <profile>
      <id>unix</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <properties>
        <gradle.executable>./gradlew</gradle.executable>
      </properties>
    </profile>

    <profile>
      <id>docs</id>
      <build>
        <defaultGoal>clean process-resources</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctor-maven-plugin</artifactId>
            <version>${asciidoctor-maven-plugin.version}</version>
            <dependencies>
              <dependency>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctorj-pdf</artifactId>
                <version>${asciidoctorj.pdf.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>output-pdf-doc</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <backend>pdf</backend>
                  <sourceHighlighter>coderay</sourceHighlighter>
                  <attributes>
                    <highlighter>coderay</highlighter>
                  </attributes>
                </configuration>
              </execution>
              <execution>
                <id>output-html</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <backend>html</backend>
                  <sourceHighlighter>highlightjs</sourceHighlighter>
                  <attributes>
                    <highlighter>highlightjs</highlighter>
                  </attributes>
                </configuration>
              </execution>
              <execution>
                <id>output-docbook</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <backend>docbook</backend>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <outputDirectory>target/generated-docs</outputDirectory>
              <sourceDirectory>docs</sourceDirectory>
              <relativeBaseDir>true</relativeBaseDir>
              <headerFooter>true</headerFooter>
              <imagesDir>images</imagesDir>
              <sourceHighlighter>highlightjs</sourceHighlighter>
              <attributes>
                <highlighter>highlightjs</highlighter>
                <toc>left</toc>
                <linkcss>false</linkcss>
                <doctype>book</doctype>
                <ruby>erubis</ruby>
                <encoding>${project.build.sourceEncoding}</encoding>
                <linkattrs>true</linkattrs>
                <numbered>true</numbered>
                <sectanchors>true</sectanchors>
                <sectlink>true</sectlink>
                <idprefix/>
                <docinfo1/>
                <icons>font</icons>
                <idseparator>-</idseparator>
                <setanchors>true</setanchors>
                <toc-title>Table of Contents</toc-title>
                <project-name>${project.artifactId}</project-name>
                <gradle-project-name>${project.artifactId}</gradle-project-name>
                <root-project-name>${project.artifactId}</root-project-name>
                <project-version>${project.version}</project-version>
                <revnumber>${project.version}</revnumber>
                <github-url>https://github.com/daggerok/${project.artifactId}</github-url>
              </attributes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>versions</id>
      <build>
        <defaultGoal>clean resources:resources</defaultGoal>
        <resources>
          <resource>
            <directory>./src/main/templates</directory>
            <filtering>true</filtering>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>${maven-resources-plugin.version}</version>
            <configuration>
              <delimiters>
                <delimiter>${*}</delimiter>
              </delimiters>
              <outputDirectory>./</outputDirectory>
              <overwrite>true</overwrite>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>updates</id>
      <build>
        <!-- ./mvnw versions:display-property-updates -P updates -->
        <defaultGoal>versions:display-property-updates</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>versions-maven-plugin</artifactId>
            <version>${versions-maven-plugin.version}</version>
            <configuration>
              <!--
                Preferences | Build, Execution, Deployment | Build Tools | Maven | Runner | VM Options:
                -Dmaven.multiModuleProjectDirectory=$M2_HOME
              -->
              <rulesUri>file:///${maven.multiModuleProjectDirectory}/.mvn/versions-maven-plugin-rules.xml</rulesUri>
            </configuration>
            <executions>
              <execution>
                <phase>initialize</phase>
                <goals>
                  <goal>display-dependency-updates</goal>
                  <goal>display-property-updates</goal>
                  <goal>display-plugin-updates</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${versions-maven-plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependency-updates-report</report>
              <report>plugin-updates-report</report>
              <report>property-updates-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <!--

    subsctitute gradle project versions: ./mvnw -P versions
    github release: ./mvnw exec:exec de.jutzig:github-release-plugin:1.1.1:release

    do not forget:

      - keep version in sync between pom.xml and build.gradle files
      - update ~/.m2/settings.xml:

        <servers>
            <server>
                <id>github</id>
                <username>GITHUB_USERNAME</username>
                <password>GITHUB_PASSWORD</password>
            </server>
        </servers>

    important:

      <scm>
        <connection>scm:git:https://github.com/username/repo</connection>
      </scm>

      value must be `scm:git:https://github.com...` but not `scm:git:git://github.com...`

    tips:

      creates the release in draft state: ./mvnw -Dgithub.draft=true
      allows to specify a commitsh: ./mvnw -Dgithub.commitish=release/1.0.0
      override credentials with system properties: ./mvnw -Dusername=ololo -Dpassword=trololo

  -->

</project>
